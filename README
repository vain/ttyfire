TTYFIRE(1)          Quick and dirty Campfire client         TTYFIRE(1)



NAME
       ttyfire - Quick and fscking dirty Campfire client

SYNOPSIS
       ttyfire
       ttyfire_new room
       ttyfire_quit

DESCRIPTION
       ttyfire is a Campfire client for your TTY. It comprises several
       scripts. The one called ttyfire is the frontend  to  the  other
       scripts.  This  man page also gives you an overview of what the
       other tools do.

       ttyfire uses tmux as a “graphical user interface”.

       These scripts are not pretty. They're quick hacks but  they  do
       the job.

       Note: It's neither possible to launch several instances of tty‐
       fire nor to connect to different accounts.

OPTIONS
       There are no command line options for ttyfire. When  you  start
       it, it reads your configuration file and launches the appropri‐
       ate tools to connect to Campfire. In particular,  it  starts  a
       new  tmux  session  named  “ttyfire”  or attaches to an already
       existing one.

       The other tools do have options, though. See below.

CONFIGURATION
       ~/.ttyfire is read when ttyfire starts. It must look like this:


            your-companys-subdomain
            your.login.e-mail@example.invalid
            yourpassword
            highlight1;another highlight;highlight3
            Room 1
            Another Room
            Yet another room!


       To be more precise:

       Line 1:
              The subdomain your company registered at 37signals.

       Line 2:
              Your login name, usually your e-mail address.

       Line 3:
              Your password. Yes, ttyfire does not use the API  token.
              That's  because  the underlying library (python2-pyfire)
              requires you to specify the password.

       Line 4:
              A list of strings, separated by semicolons, that ttyfire
              will  highlight.  Those strings will be visually marked.
              Additionally, when such a  string  is  encountered,  the
              terminal bell will be ringing. You may want to configure
              your terminal emulator to activate an  urgency  hint  on
              its window (e.g., see “bellIsUrgent” for xterm(1)).

       Lines 5 and following:
              Rooms to join when ttyfire starts.

NICKNAME COMPLETION
       To  help  you  highlight  other people, you can start a message
       with @parts,of,some,nicks: or just @nick:. Like this:


            @mar,cas,and: hey, listen to me!


       “mar”, “cas” and “and” will be replaced with  their  full  user
       names. Thus, the actual message might look like this:


            @Marc Alaimo, @Casey Biggs, @Andrew Robinson: hey, listen to me!


       To highlight all users, you can use @ALL: ....  These shortcuts
       only apply to people who are currently in the channel.

CATCHING LINKS AND PASTES
       As ttyfire wraps all text to a fixed width, it may be difficult
       to click on or select URL links in your terminal. To solve this
       problem,  ttyfire   appends   each   URL   link   to   a   file
       (/tmp/links.log).   You  can then use something like urlview(1)
       to comfortably access this file.

       The same applies  to  pastes.  ttyfire  stores  each  paste  in
       /tmp/campfire and announces the path to the corresponding file.

FRONTEND TOOLS
       As   mentioned  earlier,  ttyfire  comprises  several  scripts.
       There's two categories: Frontend tools and plumbing tools.  The
       frontend tools are the ones that you start manually; the plumb‐
       ing tools are run for you by ttyfire or the other scripts.

       ttyfire
              The main part of the frontend. Run this script to create
              a new tmux session or attach to an existing one.

       ttyfire_new room
              You have to create a new window inside of a tmux session
              and launch another instance of ttyfire_new  to  join  an
              additional channel.

              ttyfire_new  must  be run inside of tmux and creates two
              panes. The upper pane shows the output of campfire_room,
              the lower pane runs ttyfire_pipefiller.

       ttyfire_quit
              Kills  all  instances  of ttyfire_pipefiller and sends a
              “/leave” to all open channels. This script  can  be  run
              from  everywhere,  there's  no need to run it inside the
              tmux session.

              ttyfire_new binds ttyfire_quit on “^B F1” (or “^A F1” if
              you're using GNU screen bindings). This is the suggested
              way to quit the whole application.  To  leave  a  single
              room, just issue “/leave”.

              Note:  If  you  do  not properly leave a room, you might
              still be listed as “online” by Campfire. Timeouts  don't
              appear  to  work  correctly  (this also applies to other
              clients such as camper_van).  This can be very confusing
              for other people.

PLUMBING TOOLS
       These  are  the  scripts  which  are run behind the scenes. You
       don't want to run these tools manually.

       ttyfire_pipefiller pipe_name
              ttyfire_pipefiller  is  a  simple  read-write-loop  that
              reads  from stdin and writes to the pipe. It acts as the
              “command line” of ttyfire.

       ttyfire_resizer session interval
              Periodically resizes all input panes to a fixed  height.
              This may come in handy when you use a tiling window man‐
              ager: If the terminal window gets resized, the tmux lay‐
              out  may be fscked up.  ttyfire_resizer fixes this. It's
              automatically started by the ttyfire frontend.

       campfire_room pipe_name room_name
              campfire_room uses python2-pyfire to  connect  to  Camp‐
              fire.  This script does the actual work.

              The script joins exactly one room. campfire_room outputs
              anything directly to the terminal —  however,  it  reads
              commands  from  a named pipe (see fifo(7)). Anything you
              write to that pipe will be forwarded to the room, except
              for  some special commands like “/users” and “/uploads”.
              Issue “/help” for a list of available commands.

FILES
       ~/.ttyfire
              Configuration file.

       /tmp/campfire
              Pastes will be collected here.

       /tmp/links.log
              Seen URLs will be appended to this file.

       /tmp/campfire/rooms
              For each room you've joined, a directory will be created
              here. The FIFO will reside in that directory.

BUGS
       Currently, no bugs are known. If you find one, we invite you to
       report     it     at     the     GitHub      Issue      tracker
       (http://github.com/vain/ttyfire/issues).

LICENSE
       ttyfire  is  released  as  “PIZZA-WARE”.  See  the accompanying
       LICENSE file.

AUTHORS
       ttyfire and this man page were written by Peter Hofmann.

SEE ALSO
       tmux(1), urlview(1), fifo(7).



ttyfire                      December 2012                  TTYFIRE(1)
