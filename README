Minimalistic client for 37signals' Campfire.


Create a ~/.ttyfire:

	yoursubdomain
	your@login.exmpale
	yourpassword
	highlight1;another highlight;highlight3
	Room 1
	Another Room
	Yet another room!


Dependencies:

	Python 2
	pyfire https://github.com/mariano/pyfire
	GNU bash with readline support
	tmux
	Your terminal should support colors


TODOs:

	- Make the script pretty. It's a quick hack.
	- I'll add missing features once I need them.


"WTF?"

	ttyfire

	Launch a new tmux session for campfire or attach to an existing one.
	If there's no session yet, ttyfire will automatically join all
	channels defined in ~/.ttyfire -- the first four lines of that file
	are settings, all other lines contain channel names.


	ttyfire_new $room

	You have to create a new tmux window and launch another instance of
	ttyfire_new to join an additional channel.

	ttyfire_new must be run inside of tmux and creates two panes. The
	upper pane shows the output of campfire_room, the lower pane runs
	ttyfire_pipefiller.

	ttyfire_new binds "kill-window" on "^B F12" (or "^A F12" if you're
	using GNU screen bindings). This is the suggested way to leave a
	room. To leave all rooms, use "^B F1" which is "kill-session".


	campfire_room $pipe_name $room_name

	campfire_room uses pyfire to connect to Campfire. The script joins
	exactly one room. campfire_room outputs anything directly to the
	terminal -- however, it reads commands from a named pipe. Anything
	you write to that pipe will be forwarded to the room, except for
	some special commands like "/users" and "/uploads".

	campfire_room rings the terminal bell on highlights. There is no
	support for libnotify or similar systems. Thus, you might want to
	"teach" your window manager and terminal to react probperly on
	terminal bells.


	ttyfire_pipefiller $pipe_name

	ttyfire_pipefiller is a simple read-write-loop that reads from stdin
	and writes to the pipe.


tl;dr

	- Create ~/.ttyfire.
	- Launch "ttyfire" in a terminal.
